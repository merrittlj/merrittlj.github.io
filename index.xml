<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lucas Merritt&#39;s Blog</title>
    <link>https://merrittlj.github.io/</link>
    <description>Recent content on Lucas Merritt&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Apr 2023 19:28:10 -0600</lastBuildDate><atom:link href="https://merrittlj.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>New Blog</title>
      <link>https://merrittlj.github.io/posts/newblog/</link>
      <pubDate>Sat, 15 Apr 2023 19:28:10 -0600</pubDate>
      
      <guid>https://merrittlj.github.io/posts/newblog/</guid>
      <description>Welcome to the my blog.</description>
    </item>
    
    <item>
      <title>Reversing and Patching Minesweeper Part 1 -- Installation and Basic Modification</title>
      <link>https://merrittlj.github.io/posts/minesweeper1/</link>
      <pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://merrittlj.github.io/posts/minesweeper1/</guid>
      <description>Hello readers, and welcome to the second article in this series. In this article, we will be installing Ghidra and setting up our project, then we will make some basic modifications to our target program. Grab a cup of coffee and be prepared to down it, because this is a long one.
Time for our first modification! Ghidra Installation Once you have navigated to the link from the first article(you can also find it here), you will see the following page:</description>
    </item>
    
    <item>
      <title>Reversing and Patching Minesweeper Part 0 -- Introduction</title>
      <link>https://merrittlj.github.io/posts/minesweeper0/</link>
      <pubDate>Tue, 02 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://merrittlj.github.io/posts/minesweeper0/</guid>
      <description>Hello readers, and welcome to my first article I’ve wrote and the first in this series. In this series we will be Reverse Engineering a basic, old Windows Minesweeper binary and creating custom patches for our desired functionality.
This is going to be a fun series. My goal for this series There are many different reasons why I’m starting this series. However, in general, besides having fun, this is meant to be a well documented, easy introduction to Reverse Engineering binaries as a whole; and some of this knowledge can even be used outside of this topic.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://merrittlj.github.io/posts/minesweeper2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://merrittlj.github.io/posts/minesweeper2/</guid>
      <description>[
](https://medium.com/@lucas.j.merritt?source=post_page-----87a2e327678d--------------------------------)[nullOverload](https://medium.com/@lucas.j.merritt?source=post_page-----87a2e327678d--------------------------------)Follow
Aug 14, 2022
·10 min read
Reversing and Patching Minesweeper Part 2 — Advanced Modifications Hello readers, and welcome to the third article in this series. In this article, we will be using our knowledge of Minesweeper’s code to make more advanced modifications, such as making all of the tiles mines.
We do a little trolling.
If you haven’t read the second article in this series, click here.</description>
    </item>
    
  </channel>
</rss>
